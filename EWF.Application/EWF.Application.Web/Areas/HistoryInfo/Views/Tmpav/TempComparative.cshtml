@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "水温气温查询统计";
}

<div class="easyui-layout" data-options="fit:true">
    <div class="div_condition" data-options="region:'north',split:false,title:'',border:false" style="height:50px;">
        <table style="height:99%;">
            <tr>
                <td>选择测站:</td>
                <td>
                    <input id="areastcd" class="easyui-combogrid" style="width:150px" toolbar="#tb11" />
                    <div id="tb11">
                        <input class="easyui-searchbox" style="width:200px;" data-options="prompt:'输入站码或站名简拼',searcher:doSearchSta" />
                    </div>
                </td>
                <td>开始日期:</td>
                <td><input id="startdate" class="Wdate" style="width:140px" onfocus="WdatePicker({dateFmt: 'yyyy-MM-dd HH:mm'})" /></td>
                <td>结束日期:</td>
                <td><input id="enddate" class="Wdate" style="width:140px" onfocus="WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm' })" /></td>
				<td align="left">
					<a id="btnSearch" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'">查询</a>
					&nbsp;	&nbsp;&nbsp;	&nbsp;
					<a id="btnExportRiverData" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-export'">导出</a>

				</td>
            </tr>

        </table>
    </div>

    <div data-options="region:'west',split:true,title:'',border:false,onCollapse:LeftCollapse,onExpand:LeftExpand" style="width:410px;">
        <table id="dgGrid" style="height:100%;width:100%;"></table>
    </div>
    <div data-options="region:'center',split:false,title:'',border:false">
        <div style="width:100%;height:100%;overflow:hidden;" id="divLineContainer">

            <div style="height: 100%;width:100%;" id="divLine">
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">

        var arrSTCD = [];
        var arrSTNM = [];

        $(function () {


            Highcharts.setOptions({
                lang: {
                    months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
                    weekdays: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],
                    downloadJPEG: "导出JPEG图片",
                    downloadPDF: "导出PDF",
                    downloadPNG: "导出PNG图片",
                    downloadSVG: "导出SVG图片",
                    printChart: "打印图表",
                    resetZoom: '重置'
                }
            });

            initDateComponent();
            //绑定查询按钮
            $("#btnSearch").bind("click", function () {
                doSearch();

            });


            $('#divZLine').bind('mousemove touchmove touchstart', function (e) {

                var chart, point, i, event;
                try {
                    for (i = 0; i < Highcharts.charts.length; i = i + 1) {

                        chart = Highcharts.charts[i];
                        event = chart.pointer.normalize(e.originalEvent); // Find coordinates within the chart
                        point = chart.series[0].searchPoint(event, true); // Get the hovered point
                        if (point) {
                            point.highlight(e);
                        }
                    }
                } catch (e) { }
            });

        });

        function initDateComponent() {
            var curDate = new Date();
            var newDate = DateAdd("y", -1, curDate);
            $("#enddate").val(utils.formatDate(newDate, 'yyyy-MM-dd hh:00'));
            $("#startdate").val(utils.formatDate(DateAdd('d', -7, newDate), 'yyyy-MM-dd hh:00'));
            bindAreaDataGrid();
        }

        function bindAreaDataGrid() {
            $('#areastcd').combogrid({
                panelWidth: 500,
                multiple: false,
                idField: 'CODE',
                textField: 'KEYNAME',
                url: "/RealData/River/GetStaByKeywords/",
                queryParams: { "q": "" },
                columns: [[
                    //{ field: 'ck', checkbox: true },
                    { field: 'CODE', width: '30%', hidden: false, title: '站点', align: 'center' },
                    { field: 'KEYNAME', width: '30%', title: '站名', align: 'center' },
                    { field: 'TYPE', width: '30%', title: '站类', align: 'center', formatter: changesttp }

                ]],
                onLoadSuccess: function (dd) {
                    //if ($('#areastcd').combogrid('getValues').length <= 0) {
                    //    $('#areastcd').combogrid('setValue', dd.rows[0].CODE);
                    //}
                    $('#areastcd').combogrid('setValue', dd.rows[0].CODE);
                    doSearch();

                }

            });
        }
        function doSearchSta(value, name) {
            var ele = $("#areastcd");
            var grid = ele.combogrid('grid');

            $.getJSON("/RealData/River/GetStaByKeywords/", { "q": value }, function (jsondata) {

                grid.datagrid("loadData", jsondata);
            });
        }



        function doSearch() {

            var stcd = $('#areastcd').combogrid('getValue');
            var stnm = $('#areastcd').combogrid('getText');
            var sdate = $("#startdate").val();
            var edate = $("#enddate").val();
            com.ajax({
                type: 'get',
                url: '/HistoryInfo/Tmpav/GetTempComparativeData',
                data: { 'stcds': stcd, 'startDate': sdate, 'endDate': edate },
                success: function (d) {

                    if (d.total > 0) {
                        ShowTable(d, stnm);
                        DrawLine(d, stnm);

                    } else {
                        ShowTable(d, stnm);
                        DrawLine(d, stnm);

                    }
                }
            });
        }
       
        //画水温过程线
        function DrawLine(d, title) {
            var isMinLableShow = false;
            var isMaxLableShow = false;
            var HChart = new Highcharts.Chart('divLine', {
                chart: {
                    zoomType: 'x',
                    marginRight: 100
                },
                title: {
                    text: title + '温度过程线'
                },
                credits: {
                    enabled: false
                },
                subtitle: {
                    text: $("#startdate").val() + "至" + $("#enddate").val()
                },
                plotOptions: {
                    series: {
                        marker: {
                            enabled: false
                        },
                        turboThreshold: 50000//性能阈值，如果传入的数据非[xx,xx]和数字时，会限制渲染默认1000条
                    },
                    line: {
                        cropThreshold: 50000
                    }
                },
                xAxis: {
                    type: "datetime",
                    labels: {
                        formatter: function () {
                            return Highcharts.dateFormat('%m-%d %H', this.value);
                        }
                    },
                    crosshair: {
                        color: 'green'
                    },
                    tickmarkPlacement: 'on'
                    //categories: GetXdata(d)
                },
                yAxis: [{
                    title: {
                        text: '温度(摄氏度)'

                    },
                    lineWidth: 2,
                    lineColor: '#000'
                    //,
                    //labels: {
                    //    formatter: function () {
                    //        return changevalue(this.value, 2);
                    //    }
                    //}
                }
                ],
                tooltip: {
                    valueSuffix: '',
                    headerFormat: '<span style="font-size:16px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0" nowrap>{series.name}: </td>' +
                        '<td style="padding:0" nowrap><b>{point.y}</b></td></tr>',
                    footerFormat: '</table>',
                    followPointer: true,
                    shared: true,
                    useHTML: true,
                    xDateFormat: '%Y-%m-%d'
                },
                legend: {
                    align: 'center',
                    verticalAlign: 'bottom',
                    borderWidth: 0
                },
                series: GetSearies(d)
            });
        }
        function GetXdata(JsonData) {
            var name = [];
            for (var i = 0; i < JsonData.length; i++) {
                name.push(JsonData[i].TM);
            }
            return name;
        }
        function GetSearies(d) {
            var arrSeries = [];
            var objSeriesHP = {
                name: '最高气温',
                color: '#f00',

                data: [],
                lineWidth: 1
            }
            var objSeriesLP = {
                name: '最低气温',
                data: [],
                color: '#00f',

                lineWidth: 1
            }
            var objSeriesHS = {
                name: '最高水温',
                data: [],
                color: '#8E388E',

                lineWidth: 1
            }
            var objSeriesLS = {
                name: '最低水温',
                data: [],
                color: '#CD9B1D',

                lineWidth: 1
            }            
            var objSeriesAP = {
                name: '平均气温',
                data: [],
                color: '#7CFC00',

                lineWidth: 1
            }
            var objSeriesAT = {
                name: '平均水温',
                data: [],
                color: '#EEAD0E',

                lineWidth: 1
            }
            $.each(d.rows.reverse(), function (i, item) {
                if (item["HTMP"]) {
                    if (item["TM"] != "平均") {
                        objSeriesHP.data.push([com.ToUTC(item["TM"]), item["HTMP"]]);
                    }
                }

                if (item["LTMP"]) {
                    if (item["TM"] != "平均") {
                        objSeriesLP.data.push([com.ToUTC(item["TM"]), item["LTMP"]]);
                    }

                }

                if (item["AVTP"]) {
                    if (item["TM"] != "平均") {
                        objSeriesAP.data.push([com.ToUTC(item["TM"]), item["AVTP"]]);
                    }

                }
                if (item["AVWT"]) {
                    if (item["TM"] != "平均") {
                        objSeriesAT.data.push([com.ToUTC(item["TM"]), item["AVWT"]]);
                    }

                }
                if (item["HWMP"]) {
                    if (item["TM"] != "平均") {
                        objSeriesHS.data.push([com.ToUTC(item["TM"]), item["HWMP"]]);
                    }

                }
                if (item["LWMP"]) {
                    if (item["TM"] != "平均") {
                        objSeriesLS.data.push([com.ToUTC(item["TM"]), item["LWMP"]]);
                    }

                }

            });
            arrSeries.push(objSeriesHP);
            arrSeries.push(objSeriesLP);
            arrSeries.push(objSeriesHS);
            arrSeries.push(objSeriesLS);
            arrSeries.push(objSeriesAP);
            arrSeries.push(objSeriesAT);
            return arrSeries;
        }
        function LeftCollapse() {
            $("#divLineContainer").width($(document).width() - 50);
            ReflowChart();
        }

        function LeftExpand() {

            $("#divLineContainer").width($(document).width() - 430);
            ReflowChart();
        }
        function ReflowChart() {
            //var HChart = $(".chart").highcharts();
            var hcharts = $(".chart");
            $.each(hcharts, function (i, item) {
                $(item).highcharts().reflow();
            })
            //HChart.reflow();
        }
        //function syncExtremes(e) {
        //    var thisChart = this.chart;
        //    try {
        //        if (e.trigger !== 'syncExtremes') {
        //            Highcharts.each(Highcharts.charts, function (chart) {

        //                if (chart !== thisChart) {
        //                    if (chart.xAxis[0] != undefined && chart.xAxis[0].setExtremes) {
        //                        chart.xAxis[0].setExtremes(e.min, e.max, true, false, { trigger: 'syncExtremes' });
        //                    }
        //                }
        //            });
        //        }
        //    } catch (ex) {
        //        alert(ex.StackTrace);
        //    }
        //}

        function ShowTable(d, stnm) {


            $('#dgGrid').datagrid({
                title: stnm + "温度信息",
                striped: true,
                singleSelect: true,
                collapsible: true,
                rownumbers: false,
                nowrap: false,
                remoteSort: false,
                loadMsg: '',
                data: d,
                frozenColumns: [[
                    { field: 'TM', title: '时间', width: '150', rowspan: 1, align: 'center' }
                ]],
                columns: [
                    [
                        //{ field: 'TM', title: '时间', width: '20%', rowspan: 1, align: 'center', formatter: com.formatTimemm },
                        { field: 'HTMP', title: '最高气温', width: '16%', rowspan: 1, halign: 'center', align: 'right', formatter: changevalue },
                        { field: 'LTMP', title: '最低气温', width: '16%', rowspan: 1, halign: 'center', align: 'right', formatter: changevalue },
                        { field: 'HWMP', title: '最高水温', width: '16%', rowspan: 1, halign: 'center', align: 'right', formatter: changevalue },
                        { field: 'LWMP', title: '最低水温', width: '18%', rowspan: 1, halign: 'center', align: 'right', formatter: changevalue },
                        { field: 'AVTP', title: '平均气温', width: '16%', rowspan: 1, halign: 'center', align: 'right', formatter: changevalue },
                        { field: 'AVWT', title: '平均水温', width: '18%', rowspan: 1, halign: 'center', align: 'right', formatter: changevalue }

                    ]
                ]
            });
        }
        function GetColumns() {

            var cols = [];
            var objCol = [];
            $.each(arrSTCD, function (i, item) {
                objCol.push({ field: item, title: arrSTNM[i], width: '100', rowspan: 1, align: 'center', formatter: changevalue });
            })
            cols.push(objCol);
            return cols;
        }
        function GetData(jsonData) {

            var result = [];
            $.each(arrSTCD, function (i, stcd) {
                var obj = {
                    type: 'line',
                    data: [],
                    name: arrSTNM[i]
                };

                $.each(jsonData, function (index, item) {
                    if (item[stcd]) {
                        obj.data.push([com.ToUTC(item["TM"]), Number(item[stcd])]);
                    } else {
                        obj.data.push([com.ToUTC(item["TM"]), null]);
                    }


                })
                result.push(obj);
            });
            return result;
        }

    </script>
}

