@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "断面水位图";
}
@section CSS{ 
<style type="text/css">
    .bo_pic1 {
        display: inline-block;
        vertical-align: sub;
        position: relative;
        top: 3px;
    }
    </style>
}
<div class="easyui-layout" fit="true">
    <div class="div_condition" data-options="region:'north',split:false,title:'',border:false" style="overflow:hidden; height:50px;">
        <table>
            <tr>
                <td>选择测站:</td>
                <td>
                    <input id="areastcd" class="easyui-combogrid" style="width:150px" toolbar="#tb11" />
                    <div id="tb11">
                        <input class="easyui-searchbox" style="width:200px;" data-options="prompt:'输入站码或站名简拼',searcher:doSearchSta" />
                    </div>
                </td>
                <td>断面选择:</td>
                <td><input id="selSectionName" class="easyui-combobox" style="width:160px;" /></td>
                <td>日期:</td>
                <td><input class="Wdate" type="text" id="edate" style="width:160px" onFocus="WdatePicker({skin:'whyGreen',dateFmt:'yyyy-MM-dd HH:mm'})" /></td>
                <td align="left">
                    <a id="btnSearch" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'">查询</a>
                </td>
            </tr>

        </table>
    </div>
    <div data-options="region:'center',split:false,title:'',border:false" style="width:100%;height:100%;overflow:hidden;">
        <div id="divZ" style="padding:10px; vertical-align:middle; height:50px;line-height:50px;">
            <span>时间：</span> <span id="spTM" style='margin-right:10px; '></span>| <span>水位：</span> <span id="spZ" style='margin-right:10px; '></span>| <span>流量：</span> <span id="spQ" style='margin-right:10px; '></span><span class="bo_pic1"><img id="btnPlay" src="~/images/play/03.png" /></span>
        </div>
        <div id="container">

        </div>
    </div>
</div>
@section Scripts{

    <script type="text/javascript">
        var chart;
        var xMin;
        var xMax;
        var yMin = Number.MAX_VALUE;
        var arrZQ = [];
        var curZQIndex = 0;
        var isPlaying = false;
        var interval;
        $(function () {
            Highcharts.setOptions({
                lang: {
                    months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
                    weekdays: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],
                    downloadJPEG: "导出JPEG图片",
                    downloadPDF: "导出PDF",
                    downloadPNG: "导出PNG图片",
                    downloadSVG: "导出SVG图片",
                    printChart: "打印图表",
                    resetZoom: "重置"
                }
            });
            initDateComponent();
            bindAreaDataGrid();
            $("#btnSearch").click(queryData);
            
           
            $("#btnPlay").click(function () {
                
                if (!isPlaying) {
                    isPlaying = true;
                    interval = setInterval("RefreshChart()", 1000);
                    
                } else { 
                    StopRefresh();
                }
                
            });

        });
        function RefreshChart() {
             
            var newDataLength = [[xMin, arrZQ[curZQIndex].Z], [xMax, arrZQ[curZQIndex].Z]];  
            SetV(arrZQ[curZQIndex].TM, arrZQ[curZQIndex].Z, arrZQ[curZQIndex].Q);
            chart.series[0].setData(newDataLength, true);
            if (curZQIndex <arrZQ.length-1) {
                curZQIndex++;
            } else {
                StopRefresh();
            }
          
        }
        function StopRefresh() {
            curZQIndex = 0;
            isPlaying = false;
            clearInterval(interval);
           
        }
        function initDateComponent() {
            $("#edate").val(moment().format("YYYY-MM-DD HH:mm"));
        }
        function SetV(tm, z, q) {
            $("#spTM").html( moment(tm).format("YYYY-MM-DD HH:mm") );
            $("#spZ").html(z+"(m)");
            $("#spQ").html(q +"(m³/s)");
            
        }
        function queryData() {
            var stcd = $("#areastcd").combogrid("getValue");
            var secName = $('#selSectionName').combobox('getValue');

            if (secName != "") {
                $.getJSON("/RealData/River/GetSectionZ", { "stcd": stcd, "stnm": secName, "tm": $("#edate").val(), "sDt": "2,3" }, function (data) {
                    InitCharXMaxXMin(data.dtSection);
                    InitChartYMin(data.dtSection);
                    var warnZ;
                    
                    if (data.dtWarnZ && data.dtWarnZ.length > 0) {
                        warnZ = data.dtWarnZ[0].WRZ;
                    }
                   
                    drawSection(data, warnZ);
                });
            }
        }
        function InitCharXMaxXMin(dtSection) {
            if (dtSection.length > 0) {

                xMin = dtSection[0].QDJ;
                xMax = dtSection[dtSection.length-1].QDJ;
            }
        }
        function InitChartYMin(dtSection) {
            $.each(dtSection, function (i, item) {
                if (item.GC < yMin) {
                    yMin = item.GC;
                }
            });
            if (yMin == Number.MAX_VALUE) {
                yMin = 0;
            }
             
        }
        function drawSection(data, warnZ) {
            
            chart = Highcharts.chart('container', {
                chart: {
                },
                title: {
                    text: ''
                },
                credits: { enabled: false },
                subtitle: {
                    text: ''
                },
                xAxis: {
                    min:xMin,
                    max:xMax,
                    lineWidth: 1,
                    lineColor: '#000',
                    title: {
                        text: ''
                    }
                },
                yAxis: {
                    title: {
                        text: '高程(m)'
                    },
                    tickColor: '#000000',
                    tickWidth: 1,
                    tickPosition: 'outside',
                    lineWidth: 1,
                    min: yMin,
                    lineColor: '#000'
                },
                legend: { enabled: false },
                tooltip: { enabled: false },
                series: GetSeries(data, warnZ)
            });
        }
        /**
         * 断面数据点
         * param dtSection
         */
        function GetSectChartData(dtSection) {

            var arrData = [];
            $.each(dtSection, function (i, item) {
                arrData.push([Number(item.QDJ), Number(item.GC)]);
            });
            return arrData
        }

        function GetSeries(data, warnZ) {
            var objSeries = [];
            var objZ = {
                name: '水位',
                type: 'area',
                enableMouseTracking: false,
                data: GetZData(data, warnZ),
                marker: { enabled: false },
                fillColor: {
                    linearGradient: [0, 0, 0, 600],
                    stops: [
                        [0, Highcharts.getOptions().colors[0]],
                        [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                    ]
                }
            }

            var objWRZ = {
                name: '警戒水位',
                type: 'line',
                color: '#ff0000',
                dashStyle: 'Dash',
                marker: { enabled: false },
                enableMouseTracking: false,
                data: GetWarnZData(data.dtSection, warnZ)
            }

            var objSect = {
                name: '断面',
                type: 'areaspline',
                fillOpacity: 0.5,
                fillColor: '#9E7851',
                lineWidth: 0,
                marker: { enabled: false },
                enableMouseTracking: false,
                data: GetSectChartData(data.dtSection)
            }
            objSeries.push(objZ); 
            objSeries.push(objSect);
            objSeries.push(objWRZ);
            return objSeries;
        }
        /**
         * 水位点数据
         * param data
         */
        function GetZData(data, warnZ) {
            var arrData = [];
            
            if (data.dtSection.length > 0) { 
                if (data.dtZ.length > 0) {
                    arrData.push([xMin, data.dtZ[data.dtZ.length - 1].Z]);
                    SetV(data.dtZ[data.dtZ.length - 1].TM, data.dtZ[data.dtZ.length - 1].Z, data.dtZ[data.dtZ.length - 1].Q);
                    arrZQ = data.dtZ;
                    arrData.push({
                        x: xMax, y: data.dtZ[data.dtZ.length - 1].Z, dataLabels: {
                            enabled: true, align:'left',formatter: function (v) {
                               
                                if (warnZ) {
                                    var cjj = Math.round((this.y - warnZ) * 100) / 100;//距离警戒水位差值
                                    if (cjj > -5) {
                                        if (cjj > 0) {
                                            return "<font color='red'>当前水位：" + this.y + "m,超警戒水位：" + cjj + "m</font>";
                                        }
                                        return '当前水位：' + this.y + "m,距警戒水位：" + cjj+"m";

                                    } else {
                                        return '当前水位：' + this.y+"m";
                                    }
                                } else {
                                    return '当前水位：' + this.y+"m";
                                }


                            }, backgroundColor: '#97CFFF', color: '#ffffff', x: -$("#container").width() / 2, useHTML: true
                        }
                    });
                }

            }
            return arrData
        }

        function GetWarnZData(dtSection, warnZ) {
            
            var arrData = []; 
            var xMid;
            if ( dtSection.length > 0) {
                var midIndex = Math.floor(dtSection.length /5);
                
                xMid = dtSection[midIndex].QDJ;
                if (warnZ) {
                    arrData.push([xMin, Number(warnZ)]);
                    arrData.push({ x: xMid, y: Number(warnZ), dataLabels: { backgroundColor: '#9C0000', zIndex: 9, color: '#ffffff',  align:'right', enabled: true, format: '警戒水位：{y}' } });
                }
            }
            return arrData;
        }
        function bindAreaDataGrid() {
            $('#areastcd').combogrid({
                panelWidth: 380,
                multiple: false,
                idField: 'CODE',
                textField: 'KEYNAME',
                url: "/RealData/River/GetStaByKeywords/",
                queryParams: { "q": "", "sttp": "'ZZ','ZQ'" },
                columns: [[
                    { field: 'CODE', width: '100px', hidden: false, title: '站点', align: 'center' },
                    { field: 'KEYNAME', width: '100px', title: '站名', align: 'center' },
                    { field: 'TYPE', width: '120px', title: '站类', align: 'center', formatter: changesttp }

                ]],
                onChange: function (newValue, oldValue) {

                    initSectionName(newValue);
                },
                onLoadSuccess: function (dd) {
                    $('#areastcd').combogrid('setValue', dd.rows[0].CODE);

                }

            });
        }
        function doSearchSta(value, name) {
            var ele = $("#areastcd");
            var grid = ele.combogrid('grid');

            $.getJSON("/RealData/River/GetStaByKeywords/", { "q": value, "sttp": "'ZZ','ZQ'" }, function (jsondata) {

                grid.datagrid("loadData", jsondata);
            });
        }

        /**
         * *初始化断面名称
         * add by SUN
         * Date：2019-07-10 10:00
         * param stcd：站码
         */
        function initSectionName(stcd) {

            //初始化断面名称选择框
            $('#selSectionName').combobox({
                editable: false,
                valueField: 'MS',
                textField: 'MS',
                url: '/StationInfo/Details/GetStationSectionNames?outtype=json&stcd=' + stcd,
                onChange: function (newValue, oldValue) {

                    queryData();
                },
                onLoadSuccess: function (dd) {
                    $('#selSectionName').combobox('select', dd[0]['MS']);
                     
                }
            });

        }

    </script>
}
