
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "历史特征值维护";
}
<div class="div_condition" data-options="region:'north',split:false,title:'',border:false" style="height:50px;">
    <table style="height:99%;">
        <tr>
            <td>
                选择测站:<input id="areastcd" class="easyui-combogrid" style="width:150px" toolbar="#tb11" />
                <div id="tb11">
                    <input class="easyui-searchbox" style="width:200px;" data-options="prompt:'输入站码或站名简拼',searcher:doSearchSta" />
                </div>
            </td>

            <td>
                类型:<select id="type" class="easyui-combobox" style="width:200px; height:25px;"></select>
            </td>
            <td>
                <a id="btnSearch" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'">查询</a>
            </td>

        </tr>

    </table>
</div>
<div id="day" data-options="region:'center',split:false,title:'',border:false">
    <table id="dgGrid" style="height:100%;width:100%;"></table>
</div>
@section Scripts {
    <script language="javascript" type="text/javascript">
        var field = "";
        var fieldType = "";
        $(function () {
            bindAreaDataGrid();
            //绑定查询按钮
            $("#btnSearch").bind("click", function () {
                Search();
            });
        });
        //绑定测站
        function bindAreaDataGrid() {
                $('#areastcd').combogrid({
                panelWidth: 300,
                multiple: false,
                idField: 'CODE',
                textField: 'KEYNAME',
                url: "/RealData/River/GetStaByKeywords/",
                queryParams: { "q": "" },
                columns: [[
                    { field: 'CODE', width: '30%', hidden: false, title: '站点', align: 'center' },
                    { field: 'KEYNAME', width: '35%', title: '站名', align: 'center' },
                    { field: 'TYPE', width: '35%', title: '站类', align: 'center', formatter: changesttp }

                ]],
                onLoadSuccess: function (dd) {
                    $('#areastcd').combogrid('setValue', dd.rows[0].CODE);
                    InitSel();
                }
             });
        }
        //模糊查询
        function doSearchSta(value, name) {
            var ele = $("#areastcd");
            var grid = ele.combogrid('grid');

            $.getJSON("/RealData/River/GetStaByKeywords/", { "q": value }, function (jsondata) {

                grid.datagrid("loadData", jsondata);
            });
        }
        //初始化类型选择框
        function InitSel() {
            data = [{
                "Text": "最高水位",
                "Value": 1
            }, {
                "Text": "最大流量",
                "Value": 2
            }, {
                "Text": "最大含沙量",
                "Value": 3
                }, {
                    "Text": "径流量",
                    "Value": 4
                }, {
                    "Text": "输沙量",
                    "Value": 5
                }, {
                    "Text": "降雨量",
                    "Value": 6
                }];
            $('#type').combobox({
                valueField: 'Value',
                textField: 'Text',
                panelHeight: 'auto',
                required: true,
                editable: false,// 不可编辑，只能选择
                data: data,
                onLoadSuccess: function () {
                   $('#type').combobox('setValue', "1");
                },
                onChange: function () {
                    Search();
                }
            });

         }
        //查询数据
        function Search() {
            var stcd = $('#areastcd').combogrid('getValue');
            var stnm = $('#areastcd').combogrid('getText');
            var type = $('#type').combobox('getValue');
            GetGridData(stcd, type);
        }
        //去空
        function trim(val) {
            if (val != null && val != "" && val != undefined)
                return val.toString().replace(/(^\s*)|(\s*$)/g, "");
        }
        //获取表格数据
        function GetGridData(stcd,type) {
            com.ajax({
                type: 'get',
                url: '/SysManage/CharVManage/GetData/',
                data: { "stcd": stcd, "type": type },
                success: function (data) {
                    if (data == null) {
                        return;
                    }
                    var t1 = data.Table;
                    var t2 = data.Table1;
                    var datagrid; //定义全局变量datagrid
                    var editRow = undefined; //定义全局变量：当前编辑的行
                    datagrid = $('#dgGrid').datagrid({
                        singleSelect: true,
                        collapsible: true,
                        striped: true,
                        fitColumns: false,
                        rownumbers: true,
                        pagination: false,
                        data: t2,
                        loadMsg: '数据加载中,请稍后……',
                        columns: GetColumns(t1),
                        toolbar: [{
                            text: '添加', iconCls: 'icon-add', handler: function () {
                                if (editRow != undefined) {
                                    datagrid.datagrid("endEdit", editRow);
                                }
                                if (editRow == undefined) {
                                    var rows = datagrid.datagrid("getRows");
                                    var r = rows.length;
                                    datagrid.datagrid("insertRow", {
                                        index: 0, // index start with 0
                                        row: {}
                                    });
                                    //将新插入的那一行开户编辑状态
                                    datagrid.datagrid('selectRow', 0);//光标定位到最后一行
                                    datagrid.datagrid("beginEdit", 0);
                                    //给当前编辑的行赋值
                                    editRow = 0;
                                }

                            }
                        }, '-',
                        {
                            text: '删除', iconCls: 'icon-remove', handler: function () {
                                //删除时先获取选择行
                                var rows = datagrid.datagrid("getSelections");
                                //选择要删除的行
                                if (rows.length > 0) {
                                    $.messager.confirm("提示", "你确定要删除吗?", function (r) {
                                        if (r) {
                                            var ids = [];
                                            for (var i = 0; i < rows.length; i++) {
                                                var index = datagrid.datagrid("getRowIndex", rows[i]);
                                                datagrid.datagrid('deleteRow', index);
                                                // deleteRow(rows);
                                            }
                                        }
                                    });
                                }
                                else {
                                    $.messager.alert("提示", "请选择要删除的行", "error");
                                }
                            }
                        }, '-',
                        {
                            text: '修改', iconCls: 'icon-edit', handler: function () {
                                //修改时要获取选择到的行
                                var rows = datagrid.datagrid("getSelections");
                                //如果只选择了一行则可以进行修改，否则不操作
                                if (rows.length == 1) {
                                    //修改之前先关闭已经开启的编辑行，当调用endEdit该方法时会触发onAfterEdit事件
                                    if (editRow != undefined) {
                                        datagrid.datagrid("endEdit", editRow);
                                    }
                                    //当无编辑行时
                                    if (editRow == undefined) {
                                        //获取到当前选择行的下标
                                        var index = datagrid.datagrid("getRowIndex", rows[0]);
                                        //开启编辑
                                        datagrid.datagrid("beginEdit", index);
                                        //把当前开启编辑的行赋值给全局变量editRow
                                        editRow = index;
                                        //当开启了当前选择行的编辑状态之后，
                                        //应该取消当前列表的所有选择行，要不然双击之后无法再选择其他行进行编辑
                                        datagrid.datagrid("unselectAll");
                                    }
                                }
                            }
                        }, '-',
                        {
                            text: '取消', iconCls: 'icon-redo', handler: function () {
                                //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                                editRow = undefined;
                                datagrid.datagrid("rejectChanges");
                                datagrid.datagrid("unselectAll");
                            }
                        }, '-',
                        {
                            text: '提交', iconCls: 'icon-save', handler: function () {
                                datagrid.datagrid("endEdit", editRow);
                                datagrid.datagrid("unselectAll");
                                Save();
                            }
                        }
                        ],
                        onAfterEdit: function (rowIndex, rowData, changes) {
                            //endEdit该方法触发此事件
                            console.info(rowData);
                            editRow = undefined;
                        },
                        onDblClickRow: function (rowIndex, rowData) {
                            //双击开启编辑行
                            if (editRow != undefined) {
                                datagrid.datagrid("endEdit", editRow);
                            }
                            if (editRow == undefined) {
                                datagrid.datagrid("beginEdit", rowIndex);
                                editRow = rowIndex;
                            }
                        },
                        onLoadSuccess: function (data) {
                            //隐藏表头选择框
                            $("#dgGrid").parent().find("div .datagrid-header-check").children("input[type=\"checkbox\"]").eq(0).attr("style", "display:none;");
                        }
                    });
                }
            });

        }
        //绑定列
        function GetColumns(data) {
            field = "";
            fieldType = "";
            var columns = [];
            var content = [];
            var cnt = 0;
            //计算列个数，分配宽度
            for (var i = 0; i < data.length; i++) {
                var key = data[i].COLUMN_NAME;
                if (key != "RUMO" && key != "RUDE" && key != "STMO" && key != "STCD" && key != "STTDRCD") {
                    cnt++;
                }
            }
            var width = (($("#day").width() - 70) / cnt) + "px";
            content.push({ field: 'NUM', title: '', checkbox: true });
            for (var j = 0; j < data.length; j++)  {
                var key = data[j].COLUMN_NAME;
                var keytype=data[j].DATA_TYPE;
                if (key != "RUMO" && key != "RUDE" && key != "STMO") {
                    if (j == data.length - 1) {
                        field += key ;
                        fieldType += keytype;
                    }
                    else {
                        field += key + ",";
                        fieldType += keytype + ",";
                    }
                    var name = "";
                    switch (key) {
                        case "IDTM":
                            name = "年份";
                            break;
                        case "STCD":
                            name = "站码";
                            break;
                        case "ACCJL":
                            name = "径流量";
                            break;
                        case "ACCP":
                            name = "累计降雨量";
                            break;
                        case "MAXQ":
                            name = "最大流量";
                            break;
                        case "MINQ":
                            name = "最小流量";
                            break;
                        case "AVQ":
                            name = "平均流量";
                            break;
                        case "STW":
                            name = "输沙量";
                            break;
                        case "MAXS":
                            name = "最大含沙量";
                            break;
                        case "MINS":
                            name = "最小含沙量";
                            break;
                        case "MAXZ":
                            name = "最高水位";
                            break;
                        case "MINZ":
                            name = "最低水位";
                            break;
                        case "AVZ":
                            name = "平均水位";
                            break;
                        default:
                            name = name;
                            break;
                    }
                    if (key == "IDTM") {
                        content.push({
                            field: key, title: name,
                            formatter: function (val, row, index) {
                                return utils.formatDate(val, 'yyyy');
                            },
                           // editor: 'datebox', align: 'center', width: width
                            editor: { type: 'datebox', options: { required: true, formatter: myformatter, parser: myparser } }
                            , align: 'center', width: width

                        });
                    }
                    else if (key == "STCD" || key == "STTDRCD") {
                        content.push({ field: key, title: name, hidden: true });
                    }
                    else {
                        content.push({ field: key, title: name, editor: { type: 'numberbox', options: { precision: 2 } }, align: 'center', width: width });
                     }
                }
            }
            columns.push(content);
            return columns;

        }
        //编辑行中的时间控件格式化
        function myformatter(date) {
            var y = date.getFullYear();
            var m = date.getMonth() + 1;
            var d = date.getDate();
            //return m + '/' + d + '/' + y;
            return y;

        }
        //编辑行中的时间控件格式化
        function myparser(s) {
            var t = Date.parse(s);
           if (!isNaN(t)) {
               return new Date(t);
              
            } else {
                return new Date();
               
            }

        }
        //提交到数据库
        function Save() {
            var stcd = $('#areastcd').combogrid('getValue');
            var type = $('#type').combobox('getValue');
            var rows = $("#dgGrid").datagrid("getRows");
            var fieldContent = new Array();
            for (var j = 0; j < rows.length; j++) {
                for (var i = 0; i < field.split(',').length; i++) {
                        if (field.split(',')[i]== 'STCD') {
                            fieldContent[j] += stcd + ',';
                        }
                        else if (field.split(',')[i] == 'STTDRCD') {
                         fieldContent[j] += '6,';
                        }
                        else {
                            var name = field.split(',')[i];
                            fieldContent[j] += rows[j][name] + ',';
                        }
                }
            }
            var truefieldContent = "";
            for (var a = 0; a < fieldContent.length; a++) {
                truefieldContent += fieldContent[a] + "$";
            }
            truefieldContent = truefieldContent.substr(0, truefieldContent.length - 1);
            com.ajax({
                type: 'post',
                url: '/SysManage/CharVManage/SaveData/',
                data: {"stcd": stcd, "type":type,"field": field, "fieldType":fieldType, "fieldContent": truefieldContent},
                success: function (d) {
                    if (d == true) {
                        $.messager.show({
                            title: 'Success',
                            msg: "操作成功",
                            timeout: 2000,
                            showType: 'slide'
                        });
                        $('#dgGrid').datagrid('reload');
                    }
                    else {
                        $.messager.show({
                            title: '提示错误',
                            msg: "操作失败",
                            showType: 'slide'
                        });
                        $('#dgGrid').datagrid('reload');
                    }
                },
                error: function (error) {
                   $.messager.show({
                        title: '提示错误',
                        msg: error,
                        showType: 'slide'
                    });
                }
            });
        }
    </script>

}


