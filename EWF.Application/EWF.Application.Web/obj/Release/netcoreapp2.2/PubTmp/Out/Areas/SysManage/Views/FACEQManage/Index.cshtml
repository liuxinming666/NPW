
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "设施设备维护";
}
<div class="div_condition" data-options="region:'north',split:false,title:'',border:false" style="height:50px;">
    <table style="height:99%;">
        <tr>
            <td>
                选择测站:<input id="areastcd" class="easyui-combogrid" style="width:150px" toolbar="#tb11" />
                <div id="tb11">
                    <input class="easyui-searchbox" style="width:200px;" data-options="prompt:'输入站码或站名简拼',searcher:doSearchSta" />
                </div>
            </td>

            <td>
                类型:<select id="selAllClass" class="easyui-combotree" style="width:200px; height:25px;"></select>
            </td>
            <td>
                <a id="btnSearch" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'">查询</a>
            </td>

        </tr>

    </table>
</div>
<div id="day"  data-options="region:'center',split:false,title:'',border:false">
    <table id="dgGrid" style="height:100%;width:100%;"></table>
</div>
@section Scripts {
    <script language="javascript" type="text/javascript">
        var g_stcd;
        var g_stnm;
        var g_tableName;
        var Arrfield = new Array();
        var Arrfieldtype = new Array();
        //var Arrfieldtype;
        $(function () {
            bindAreaDataGrid();
           
            //绑定查询按钮
            $("#btnSearch").bind("click", function () {
                Search();
           });
        });
        //绑定测站
        function bindAreaDataGrid() {
                $('#areastcd').combogrid({
                panelWidth: 300,
                multiple: false,
                idField: 'CODE',
                textField: 'KEYNAME',
                url: "/RealData/River/GetStaByKeywords/",
                queryParams: { "q": "" },
                columns: [[
                    { field: 'CODE', width: '30%', hidden: false, title: '站点', align: 'center' },
                    { field: 'KEYNAME', width: '35%', title: '站名', align: 'center' },
                    { field: 'TYPE', width: '35%', title: '站类', align: 'center', formatter: changesttp }

                ]],
                onLoadSuccess: function (dd) {
                    $('#areastcd').combogrid('setValue', dd.rows[0].CODE);
                    InitSel();
                }
             });
        }
        //模糊查询
        function doSearchSta(value, name) {
            var ele = $("#areastcd");
            var grid = ele.combogrid('grid');

            $.getJSON("/RealData/River/GetStaByKeywords/", { "q": value }, function (jsondata) {

                grid.datagrid("loadData", jsondata);
            });
        }
        //初始化类型选择框
        function InitSel() {
            com.ajax({
                type: 'get',
                url: '/StationInfo/FacEq/GetFacEqTreeData/',
                //data: { "test":  ""},
                success: function (d) {
                    firC = d.Table;;
                    secC = d.Table1;
                    var treeData = [{ "id": -1, "text": "设施设备", "state": "open", "children": [] }];

                    for (var i = 0; i < firC.length; i++) {
                        var objTmp = {};
                        objTmp.text = firC[i].FIRNAME;
                        objTmp.id = firC[i].FIRCLASS;
                        objTmp.children = new Array();
                        if (trim(firC[i].TABLENAME) != '') {
                            if(i==0)
                                objTmp.state = 'open';
                            else
                                objTmp.state = 'closed';
                            objTmp.attributes = { 'TABLENAME': firC[i].TABLENAME };
                        }
                        else {
                            objTmp.state = 'closed';
                        }
                        for (var j = 0; j < secC.length; j++) {
                            var objTmp2 = {};

                            if (firC[i].FIRCLASS.substr(0, 2) == secC[j].FIRCLASS.substr(0, 2)) {
                                objTmp2.id = secC[j].FIRCLASS;
                                objTmp2.text = secC[j].FIRNAME;
                                objTmp2.attributes = { 'TABLENAME': secC[j].TABLENAME };
                                objTmp.children.push(objTmp2);
                            }
                        }
                        treeData[0].children.push(objTmp);
                    }
                    $('#selAllClass').combotree('loadData', treeData);
                    $("#selAllClass").combotree({
                        onLoadSuccess: function (node, data) {
                          if (data.length>0) {
                                $("#selAllClass").combotree('setValue', '01010000');
                            } 
                        },
                        onChange: function () {
                            var t = $('#selAllClass').combotree('tree');
                            var n = t.tree('getSelected');
                            if (n.attributes['TABLENAME'] != null && n.attributes['TABLENAME'] != "") {
                                g_tableName = n.attributes['TABLENAME'];
                                Search();
                            }
                        }
                    });
                }
            });

         }
        //查询数据
        function Search() {
            var stcd = $('#areastcd').combogrid('getValue');
            var stnm = $('#areastcd').combogrid('getText');
            GetFieldsAndData(stcd, g_tableName);
            g_stcd = stcd;
            g_stnm = stnm;

        }
        //去空
        function trim(val) {
            if (val != null && val != "" && val != undefined)
                return val.toString().replace(/(^\s*)|(\s*$)/g, "");
        }
        //字段过滤器
        function filterField(tableName, fieldName, fieldContent) {
            var objVal = new Object();
            //基线数据表
            if (tableName == 'TO_BASELINEINFO') {
                if ('LOCATION' == fieldName) {
                    var data = [{
                        "Text": "左岸",
                        "Value": "1"
                    }, {
                        "Text": "右岸",
                        "Value": "2"
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {
                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "左岸";
                                    break;
                                case "2":
                                    title = "右岸";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                                required: true,
                                editable: false,
                                data: data
                            }
                        }
                        
                    };
                }
            }

            if (tableName == 'TO_SECINFO') {
                if ('SDTYPE' == fieldName) {
                    var data = [{
                        "Text": "标志桩",
                        "Value": 1
                    }, {
                        "Text": "标志牌",
                        "Value": 2
                    }, {
                        "Text": "标志杆",
                        "Value": 3
                    }, {
                        "Text": "钢标",
                        "Value": 4
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "标志桩";
                                    break;
                                case "2":
                                    title = "标志牌";
                                    break;
                                case "3":
                                    title = "标志杆";
                                    break;
                                case "4":
                                    title = "钢标";
                                    break;
                                default:
                                    title = title;
                                    break;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                                //required: true,
                                editable: false,
                                data: data
                            }
                        }
                    };
                }
            }

            if (tableName == 'TO_CABLEWAYINFO') {
                if ('STYPE' == fieldName) {
                    var data = [{
                        "Text": "吊箱主缆道",
                        "Value": 1
                    }, {
                        "Text": "吊箱副缆道",
                        "Value": 2
                    }, {
                        "Text": "吊船缆道",
                        "Value": 3
                    }, {
                        "Text": "铅鱼缆道",
                        "Value": 4
                    }, {
                        "Text": "浮标缆道",
                        "Value": 5
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "吊箱主缆道";
                                    break;
                                case "2":
                                    title = "吊箱副缆道";
                                    break;
                                case "3":
                                    title = "吊船缆道";
                                    break;
                                case "4":
                                    title = "铅鱼缆道";
                                    break;
                                case "5":
                                    title = "浮标缆道";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                               // required: true,
                                editable: false,
                                data: data
                            }
                        }
                    };
                }
            }

            if (tableName == 'TO_EQ_HANGINGBOX') {
                if ('LIFTINGMODE' == fieldName) {
                    var data = [{
                        "Text": "电动",
                        "Value": 1
                    }, {
                        "Text": "人工",
                        "Value":2
                    }, {
                        "Text": "电动+人工",
                        "Value": 3
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "电动";
                                    break;
                                case "2":
                                    title = "人工";
                                    break;
                                case "3":
                                    title = "电动+人工";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                                //required: true,
                                editable: false,
                                data: data
                            }
                        }
                    };
                }
            }

            if (tableName == 'TO_EQ_DRAFT') {
                if ('STYPE' == fieldName) {
                    var data = [{
                        "Text": "直立式",
                        "Value": 1
                    }, {
                        "Text": "倾斜式",
                        "Value": 2
                    }, {
                        "Text": "矮桩式",
                        "Value": 3
                    }, {
                        "Text": "悬垂式",
                        "Value": 4
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "直立式";
                                    break;
                                case "2":
                                    title = "倾斜式";
                                    break;
                                case "3":
                                    title = "矮桩式";
                                    break;
                                case "4":
                                    title = "悬垂式";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                                //required: true,
                                editable: false,
                                data: data
                            }
                        }

                    };
                }
            }

            //自己水位计
            if (tableName == 'TO_EQ_WLG') {
                if ('STYPE' == fieldName) {
                    var data = [{
                        "Text": "雷达水位计",
                        "Value": 1
                    }, {
                        "Text": "超声波水位计",
                        "Value": 2
                    }, {
                        "Text": "浮子式水位计",
                        "Value": 3
                    }, {
                        "Text": "压力式水位计",
                        "Value": 4
                    }, {
                        "Text": "电子水尺",
                        "Value": 5
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "雷达水位计";
                                    break;
                                case "2":
                                    title = "超声波水位计";
                                    break;
                                case "3":
                                    title = "浮子式水位计";
                                    break;
                                case "4":
                                    title = "压力式水位计";
                                    break;
                                case "5":
                                    title = "电子水尺";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                               // required: true,
                                editable: false,
                                data: data
                            }
                        }

                    };
                }
            }

            //雨量器（计）
            if (tableName == 'TO_EQ_RAINGAUGE') {
                if ('STYPE' == fieldName) {
                    var data = [{
                        "Text": "翻斗式",
                        "Value": 1
                    }, {
                        "Text": "称重式",
                        "Value": 2
                    }, {
                        "Text": "虹吸式",
                        "Value": 3
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "翻斗式";
                                    break;
                                case "2":
                                    title = "称重式";
                                    break;
                                case "3":
                                    title = "虹吸式";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                                //required: true,
                                editable: false,
                                data: data
                            }
                        }

                    };
                }
            }

            //测量仪器
            if (tableName == 'TO_EQ_SURVEY') {
                if ('STYPE' == fieldName) {
                    var data = [{
                        "Text": "六分仪",
                        "Value": 1
                    }, {
                        "Text": "水准仪",
                        "Value": 2
                    }, {
                        "Text": "经纬仪",
                        "Value": 3
                    }, {
                        "Text": "全站仪",
                        "Value": 4
                    }, {
                        "Text": "定位仪（GPS/GIS/测距仪）",
                        "Value": 5
                    }];
                    objVal = {
                        field: fieldName, title: fieldContent,
                        formatter: function (val, row, index) {

                            var title = val;
                            switch (title) {
                                case "1":
                                    title = "六分仪";
                                    break;
                                case "2":
                                    title = "水准仪";
                                    break;
                                case "3":
                                    title = "经纬仪";
                                    break;
                                case "4":
                                    title = "全站仪";
                                    break;
                                case "5":
                                    title = "定位仪（GPS/GIS/测距仪）";
                                    break;
                                default:
                                    title = title;
                            }
                            return title;
                        },
                        editor: {
                            type: 'combobox',
                            options: {
                                valueField: 'Value',
                                textField: 'Text',
                                panelHeight: 'auto',
                                required: true,
                                editable: false,
                                data: data
                            }
                        }
                    };
                }
            }

            if (objVal.field != null) {
                return objVal;
            }
            else {
                return false;
            }
        }
        //获取表格数据
        function GetFieldsAndData(stcd, tableName) {
            com.ajax({
                type: 'get',
                url: '/StationInfo/FacEq/GetFacEqFieldsAndData/',
                data: { "stcd": stcd, "tableName": tableName },
                success: function (data) {
                    if (data == null) {
                        return;
                    }
                    var t1 = data.Table;
                    var t2 = data.Table1;
                    Arrfield = new Array();
                    Arrfieldtype = new Array();
                   //表列自动生成
                    var fields = new Array();
                    fields.push({ field: 'NUM', title: '', checkbox: true });
                    for (var i = 0; i < t1.length; i++) {
                        Arrfield.push(t1[i].COLUMN_NAME);
                        Arrfieldtype.push(trim(t1[i].DATA_TYPE));
                        var fieldType = trim(t1[i].DATA_TYPE);
                       if (i < 2) {
                            fields.push({ field: t1[i].COLUMN_NAME, title: t1[i].COMMENTS,hidden:true });
                        }
                        else {
                           var retVal = filterField(g_tableName, t1[i].COLUMN_NAME, t1[i].COMMENTS);
                           if (false == retVal) {
                               if (fieldType == "number" || fieldType== "numeric")
                                   fields.push({ field: t1[i].COLUMN_NAME, title: t1[i].COMMENTS, editor: { type: 'numberbox', options: { precision: 2 } } });
                               else if (fieldType == "datetime")
                                   fields.push({ field: t1[i].COLUMN_NAME, title: t1[i].COMMENTS, editor: 'datebox', formatter: changeTM  });
                               else 
                                   fields.push({ field: t1[i].COLUMN_NAME, title: t1[i].COMMENTS, editor: { type: 'text'} });
                           }
                           else {
                               fields.push(retVal);
                           }
                       }
                    }

                    var aryTmp = new Array();
                    for (var j = 0; j < t2.length; j++) {
                        var objTmp = new Object();
                        for (var k = 0; k < t1.length; k++) {
                            objTmp[t1[k].COLUMN_NAME] = ZeroToNull(t2[j][t1[k].COLUMN_NAME]);
                        }
                        aryTmp.push(objTmp);
                    }
                    InitJSGrid(fields, aryTmp);
                }
            });

        }
        //绑定表格
        function InitJSGrid(fields, data) {
            var datagrid; //定义全局变量datagrid
            var editRow = undefined; //定义全局变量：当前编辑的行
            datagrid =$('#dgGrid').datagrid({
                singleSelect: true,
                collapsible: true,
                striped: true,
                fitColumns: false,
                rownumbers: true,
                pagination: false,
                //pagePosition: 'bottom',
                //pageSize: 20,
                data: data,
                loadMsg: '数据加载中,请稍后……',
                columns: GetColumns(fields),
                toolbar: [{
                   text: '添加', iconCls: 'icon-add', handler: function () {
                       if (editRow != undefined) {
                           datagrid.datagrid("endEdit", editRow);
                       }
                       if (editRow == undefined) {
                           var rows = datagrid.datagrid("getRows");
                           var r = rows.length;
                           datagrid.datagrid("insertRow", {
                               index: 0, // index start with 0
                               row: {}
                           });
                           //将新插入的那一行开户编辑状态
                           datagrid.datagrid('selectRow', 0);//光标定位到最后一行
                           datagrid.datagrid("beginEdit", 0);
                           //给当前编辑的行赋值
                           editRow = 0;
                       }

                   }
               }, '-',
               {
                   text: '删除', iconCls: 'icon-remove', handler: function () {
                       //删除时先获取选择行
                       var rows = datagrid.datagrid("getSelections");
                       //选择要删除的行
                       if (rows.length > 0) {
                           $.messager.confirm("提示", "你确定要删除吗?", function (r) {
                               if (r) {
                                   var ids = [];
                                   for (var i = 0; i < rows.length; i++) {
                                       var index = datagrid.datagrid("getRowIndex", rows[i]);
                                       datagrid.datagrid('deleteRow', index);
                                      // deleteRow(rows);
                                   }
                               }
                           });
                       }
                       else {
                           $.messager.alert("提示", "请选择要删除的行", "error");
                       }
                   }
               }, '-',
               {
                   text: '修改', iconCls: 'icon-edit', handler: function () {
                       //修改时要获取选择到的行
                       var rows = datagrid.datagrid("getSelections");
                       //如果只选择了一行则可以进行修改，否则不操作
                       if (rows.length == 1) {
                           //修改之前先关闭已经开启的编辑行，当调用endEdit该方法时会触发onAfterEdit事件
                           if (editRow != undefined) {
                               datagrid.datagrid("endEdit", editRow);
                           }
                           //当无编辑行时
                           if (editRow == undefined) {
                               //获取到当前选择行的下标
                               var index = datagrid.datagrid("getRowIndex", rows[0]);
                               //开启编辑
                               datagrid.datagrid("beginEdit", index);
                               //把当前开启编辑的行赋值给全局变量editRow
                               editRow = index;
                               //当开启了当前选择行的编辑状态之后，
                               //应该取消当前列表的所有选择行，要不然双击之后无法再选择其他行进行编辑
                               datagrid.datagrid("unselectAll");
                           }
                       }
                        }
                    }, '-',
                    {
                   text: '取消', iconCls: 'icon-redo', handler: function () {
                       //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                       editRow = undefined;
                       datagrid.datagrid("rejectChanges");
                       datagrid.datagrid("unselectAll");
                        }
                    }, '-',
                   {
                   text: '提交', iconCls: 'icon-save', handler: function () {
                       datagrid.datagrid("endEdit", editRow);
                       datagrid.datagrid("unselectAll");
                       Save();
                   }}
                ],
                onAfterEdit: function (rowIndex, rowData, changes) {
                   //endEdit该方法触发此事件
                   console.info(rowData);
                   editRow = undefined;
               },
                onDblClickRow: function (rowIndex, rowData) {
                   //双击开启编辑行
                   if (editRow != undefined) {
                       datagrid.datagrid("endEdit", editRow);
                   }
                   if (editRow == undefined) {
                       datagrid.datagrid("beginEdit", rowIndex);
                       editRow = rowIndex;
                   }
               },
                onLoadSuccess: function (data) {
                   //隐藏表头选择框
                   $("#dgGrid").parent().find("div .datagrid-header-check").children("input[type=\"checkbox\"]").eq(0).attr("style", "display:none;");
                }
               //onClickCell: function (index, field, value) {
               //    datagrid.datagrid('selectRow', index);
               //    var rows = datagrid.datagrid("getSelections");
               //}
            });

        }
        function GetColumns(r) {
            var columns = [];
            var content = [];
            var cnt = 0;
            if (r.length > 0) {
                    for (var i = 0; i < r.length; i++) {
                        content.push(r[i]);
                    }

                }
            columns.push(content);
            return columns;

        }
        function Save() {
          
            var rows = $("#dgGrid").datagrid("getRows");
            var  fieldsTmp = Arrfield;
            var fieldName = '';
            var fieldType = '';
            for (var t = 0; t < Arrfield.length; t++) {
                if (Arrfield[t] != 'ID') {
                    fieldName += Arrfield[t] + ",";
                    fieldType += Arrfieldtype[t] + ",";
                }
            }
            fieldName = fieldName.substr(0, fieldName.length - 1);
            fieldType = fieldType.substr(0, fieldType.length - 1);
            var fieldContent = new Array();
            for (var j = 0; j < rows.length; j++) {
                for (var i = 0; i < fieldName.split(',').length; i++) {
                    //if (fieldName.split(',')[i] != 'ID') {
                        if (fieldName.split(',')[i]== 'STCD') {
                            fieldContent[j] += g_stcd + ',';
                        }
                        else {
                            var name = fieldName.split(',')[i];
                            fieldContent[j] += rows[j][name] + ',';
                        }
                   // }
                }
            }
            var truefieldContent = "";
            for (var a = 0; a < fieldContent.length; a++) {
                truefieldContent += fieldContent[a] + "$";
            }
            truefieldContent = truefieldContent.substr(0, truefieldContent.length - 1);
            com.ajax({
                type: 'post',
                url: '/SysManage/FACEQManage/SaveFacEqData/',
                data: { "stcd": g_stcd, "tableName": g_tableName, "fieldName": fieldName, "fieldType":fieldType, "fieldContent": truefieldContent},
                success: function (d) {
                    //alert("操作成功！");
                    if (d == true) {
                        $.messager.show({
                            title: 'Success',
                            msg: "操作成功",
                            timeout: 2000,
                            showType: 'slide'
                        });
                        $('#dgGrid').datagrid('reload');
                    }
                    else {
                        $.messager.show({
                            title: '提示错误',
                            msg: "操作失败",
                            showType: 'slide'
                        });
                        $('#dgGrid').datagrid('reload');
                    }
                },
                error: function (error) {
                    //alert(error);
                    $.messager.show({
                        title: '提示错误',
                        msg: error,
                        showType: 'slide',
                        style: {
                        }
                    });
                }
            });
        }
        function ZeroToNull(sValue) {
            if (sValue == "0") {
                return "";
            }
            else {
                return sValue
            }
        }
        function changeTM(val, row, index) {
            return utils.formatDate(val, 'yyyy-MM-dd');
        }
    </script>

}


