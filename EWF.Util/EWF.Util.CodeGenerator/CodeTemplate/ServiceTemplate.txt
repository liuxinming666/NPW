/**
*┌──────────────────────────────────────────────────────────────┐
*│　描    述：{Comment}                                                    
*│　作    者：{Author}                                            
*│　版    本：1.0    模板代码自动生成                                                
*│　创建时间：{GeneratorTime}                             
*└──────────────────────────────────────────────────────────────┘
*┌──────────────────────────────────────────────────────────────┐
*│　命名空间： {ServicesNamespace}                                  
*│　类    名： {ModelName}Service                                    
*└──────────────────────────────────────────────────────────────┘
*/
using EWF.Entity;
using EWF.IRepository;
using EWF.IServices;
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using EWF.Util;

namespace {ServicesNamespace}
{
    public class {ModelName}Service: I{ModelName}Service
    {
        private readonly I{ModelName}Repository _repository;

        public {ModelName}Service(I{ModelName}Repository repository)
        {
            _repository = repository;
        }


        public {ModelName} Get({KeyType} ID)
        {
            var result = _repository.Get(ID);
            return result;
        }

        public bool Insert({ModelName} entity)
        {
            var result = _repository.Insert(entity);
            if (result > 0)
            {
                return true; ;
            }
            return false;
        }
        
        public bool Update({ModelName} entity)
        {
            var result = _repository.UpdateIgnoreNull(entity);
            return result;
        }

        public bool Delete({KeyType} ID)
        {
            var result = _repository.Delete(ID);
            if (result > 0)
            {
                return true;
            }
            return false;
        }

        public bool DeleteList(object whereConditions)
        {
            var result = _repository.DeleteList(whereConditions);
            if (result > 0)
            {
                return true; 
            }
            return false;
        }

    }
}